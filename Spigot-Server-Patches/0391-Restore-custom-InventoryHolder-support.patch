From 32d8db178cb1f87da0476e250e2c04b1130f918a Mon Sep 17 00:00:00 2001
From: Shane Freeder <theboyetronic@gmail.com>
Date: Mon, 5 Nov 2018 04:23:51 +0000
Subject: [PATCH] Restore custom InventoryHolder support

Upstream removed the ability to consistently use a custom InventoryHolder,
However, the implementation does not use an InventoryHolder in any form
outside of custom inventories.

We can take that knowledge and apply some expected behavior, if we're given
an inventory holder, we should use it and return a custom inventory with the
holder, otherwise, create an inventory backed by the intended inventory, as
per upstream behavior.

This provides a "best of both worlds" scenario: plugins with InventoryHolder's
will always work as intended in the past, those without will create implementation
based inventories.

diff --git a/src/main/java/org/bukkit/craftbukkit/inventory/util/CraftInventoryCreator.java b/src/main/java/org/bukkit/craftbukkit/inventory/util/CraftInventoryCreator.java
index 23389743d..d25928e09 100644
--- a/src/main/java/org/bukkit/craftbukkit/inventory/util/CraftInventoryCreator.java
+++ b/src/main/java/org/bukkit/craftbukkit/inventory/util/CraftInventoryCreator.java
@@ -31,10 +31,20 @@ public final class CraftInventoryCreator {
     }
 
     public Inventory createInventory(InventoryHolder holder, InventoryType type) {
+        // Paper start
+        if (holder != null) {
+            return DEFAULT_CONVERTER.createInventory(holder, type);
+        }
+        //noinspection ConstantConditions // Paper end
         return converterMap.get(type).createInventory(holder, type);
     }
 
     public Inventory createInventory(InventoryHolder holder, InventoryType type, String title) {
+        // Paper start
+        if (holder != null) {
+            return DEFAULT_CONVERTER.createInventory(holder, type, title);
+        }
+        //noinspection ConstantConditions // Paper end
         return converterMap.get(type).createInventory(holder, type, title);
     }
 
-- 
2.17.2 (Apple Git-113)

