From 8d765c27ab86e6345015a12b13d73866acf6d460 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Fri, 18 Jan 2019 00:08:15 -0500
Subject: [PATCH] Fix Custom Shapeless Custom Crafting Recipes

Mojang implemented Shapeless different than Shaped

This made the Bukkit RecipeChoice API not work for Shapeless.

This reimplements vanilla logic using the same test logic as Shaped

diff --git a/src/main/java/net/minecraft/server/ShapelessRecipes.java b/src/main/java/net/minecraft/server/ShapelessRecipes.java
index 819b4ac2d..ea4083a45 100644
--- a/src/main/java/net/minecraft/server/ShapelessRecipes.java
+++ b/src/main/java/net/minecraft/server/ShapelessRecipes.java
@@ -62,18 +62,47 @@ public class ShapelessRecipes implements IRecipe {
             AutoRecipeStackManager autorecipestackmanager = new AutoRecipeStackManager();
             int i = 0;
 
+            // Paper start
+            java.util.List<ItemStack> providedItems = new java.util.ArrayList<>();
+            co.aikar.util.Counter<ItemStack> matchedProvided = new co.aikar.util.Counter<>();
+            co.aikar.util.Counter<RecipeItemStack> matchedIngredients = new co.aikar.util.Counter<>();
+            // Paper end
             for (int j = 0; j < iinventory.n(); ++j) {
                 for (int k = 0; k < iinventory.U_(); ++k) {
                     ItemStack itemstack = iinventory.getItem(k + j * iinventory.U_());
 
                     if (!itemstack.isEmpty()) {
-                        ++i;
-                        autorecipestackmanager.b(new ItemStack(itemstack.getItem()));
+                        // Paper start
+                        itemstack = itemstack.cloneItemStack();
+                        providedItems.add(itemstack);
+                        for (RecipeItemStack ingredient : ingredients) {
+                            if (ingredient.test(itemstack)) {
+                                matchedProvided.increment(itemstack);
+                                matchedIngredients.increment(ingredient);
+                            }
+                        }
+                        // Paper end
                     }
                 }
             }
-
-            return i == this.ingredients.size() && autorecipestackmanager.a(this, (IntList) null);
+            // Paper start
+            java.util.List<RecipeItemStack> ingredients = new java.util.ArrayList<>(this.ingredients);
+            providedItems.sort(java.util.Comparator.comparingInt((ItemStack c) -> (int) matchedProvided.getCount(c)).reversed());
+            ingredients.sort(java.util.Comparator.comparingInt((RecipeItemStack c) -> (int) matchedIngredients.getCount(c)));
+
+            PROVIDED:
+            for (ItemStack provided : providedItems) {
+                for (Iterator<RecipeItemStack> itIngredient = ingredients.iterator(); itIngredient.hasNext(); ) {
+                    RecipeItemStack ingredient = itIngredient.next();
+                    if (ingredient.test(provided)) {
+                        itIngredient.remove();
+                        continue PROVIDED;
+                    }
+                }
+                return false;
+            }
+            return ingredients.isEmpty();
+            // Paper end
         }
     }
 
-- 
2.17.2 (Apple Git-113)

